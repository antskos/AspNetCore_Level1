@model CartOrderViewModel
@{
    ViewData["Title"] = "Корзина";
}



<section id="cart_items">
        <div class="container">
            <div class="breadcrumbs">
                <ol class="breadcrumb">
                    <li><a href="#">Home</a></li>
                    <li class="active">Shopping Cart</li>
                </ol>
            </div>
            <div class="table-responsive cart_info">
                <table class="table table-condensed">
                    <thead>
                        <tr class="cart_menu">
                            <td class="image">Позиция</td>
                            <td class="description">Описание</td>
                            <td class="price">Цена</td>
                            <td class="quantity">Количество</td>
                            <td class="total">Итого</td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (product,quantity) in Model.Cart.Items)
                        {   
                            <tr>
                                <td class="cart_product">
                                    <a href=""><img src="~/images/shop/@product.ImageUrl" alt=""></a>
                                </td>
                                <td class="cart_description">
                                    <h4><a asp-controller="Catalog" asp-action="Details" asp-route-id ="@product.Id">@product.Name</a></h4>
                                    <p>арт: @product.Id.ToString("0000000")</p>
                                </td>
                                <td class="cart_price">
                                    <p>@product.Price.ToString("C")</p>
                                </td>
                                <td class="cart_quantity">
                                    <div class="cart_quantity_button">
                                        <a class="cart_quantity_up" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@product.Id"> + </a>
                                        <input class="cart_quantity_input" type="text" name="quantity" value="@quantity" autocomplete="off" size="2">
                                        <a class="cart_quantity_up" asp-controller="Cart" asp-action="DecrementFromCart" asp-route-id="@product.Id"> - </a>
                                    </div>
                                </td>
                                <td class="cart_total">
                                    <p class="cart_total_price">@((product.Price*quantity).ToString("C"))</p>
                                </td>
                                <td class="cart_delete">
                                    <a class="cart_quantity_delete" cart_quantity_up" asp-controller="Cart" asp-action="RemoveFromCart" asp-route-id="@product.Id"><i class="fa fa-times"></i></a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </section> <!--/#cart_items-->

<section id="do_action">
    <div class="container">
        <div class="heading">
            <h3>What would you like to do next?</h3>
            <p>Choose if you have a discount code or reward points you want to use or would like to estimate your delivery cost.</p>
        </div>

        @{
            var sum_cart = Model.Cart.Items.Sum(item => item.product.Price * item.quantity);
        }

        @* через ViewDataDictionary можем добавлять различные данные из представления в частичное представление *@
        <partial name="Partial/_CheckOut" model="@Model.Order" view-data="@(new ViewDataDictionary(ViewData) { { "SumCart", sum_cart } })" />

    </div>
    </section><!--/#do_action-->

   

